version: 2.1
aliases:

jobs:
  otp_release:
    docker:
      - image: heathmont/elixir-ci:1.14.0-otp-25-alpine
    environment:
      MIX_ENV: prod
    steps:
      - checkout
      - run:
          name: Check variables
          command: ./scripts/deploy/check-vars "in system" "ROBOT_SSH_KEY" "DOCKER_EMAIL" "DOCKER_ORG" "DOCKER_PASS" "DOCKER_USER" "HEX_API_KEY"
      - run:
          name: Setup robot SSH key
          command: echo "$ROBOT_SSH_KEY" | base64 -d > $HOME/.ssh/id_rsa.robot && chmod 600 $HOME/.ssh/id_rsa.robot && ssh-add $HOME/.ssh/id_rsa.robot
      - run:
          name: Setup SSH config
          command: echo -e "Host *\n IdentityFile $HOME/.ssh/id_rsa.robot\n IdentitiesOnly yes" > $HOME/.ssh/config
      - restore_cache:
          keys:
            - v7-build-{{ checksum "mix.lock" }}-{{ .Revision }}
            - v7-build-{{ checksum "mix.lock" }}-
            - v7-build-
      - run:
          name: Update git submodules
          command: git submodule update --init --recursive
      - run:
          name: Hex auth
          command: mix hex.organization auth coingaming --key $HEX_API_KEY
      - run:
          name: Fetch dependencies
          command: mix setup
      - run:
          name: "Clean assets"
          command: mix phx.digest.clean --all && mix assets.clean
      - run:
          name: "Install apps dependencies"
          command: mix assets.setup
      - run:
          name: "Build apps assets"
          command: mix assets.deploy
      - run:
          name: Build release
          command: scripts/deploy/build-release
      - save_cache:
          key: v7-build-{{ checksum "mix.lock" }}-{{ .Revision }}
          paths:
            - .cache
            - deps
            - _build
            - ~/.mix
  check_code_quality:
    docker:
      - image: heathmont/elixir-ci:1.14.0-otp-25-alpine
    environment:
      MIX_ENV: test
    steps:
      - checkout
      - run:
          name: Check variables
          command: ./scripts/deploy/check-vars "in system" "ROBOT_SSH_KEY" "DOCKER_EMAIL" "DOCKER_ORG" "DOCKER_PASS" "DOCKER_USER" "HEX_API_KEY"
      - run:
          name: Setup robot SSH key
          command: echo "$ROBOT_SSH_KEY" | base64 -d > $HOME/.ssh/id_rsa.robot && chmod 600 $HOME/.ssh/id_rsa.robot && ssh-add $HOME/.ssh/id_rsa.robot
      - run:
          name: Setup SSH config
          command: echo -e "Host *\n IdentityFile $HOME/.ssh/id_rsa.robot\n IdentitiesOnly yes" > $HOME/.ssh/config
      - restore_cache:
          keys:
            - v7-build-{{ checksum "mix.lock" }}-{{ .Revision }}
            - v7-build-{{ checksum "mix.lock" }}-
            - v7-build-
      - run:
          command: git submodule update --init --recursive
      - run:
          command: mix hex.organization auth coingaming --key $HEX_API_KEY
      - run:
          command: mix archive.install hex ex_env 0.3.1 --force
      - run:
          command: mix setup
      - run:
          command: mix assets.setup
      - run:
          command: mix format --check-formatted
      - run:
          command: mix compile --all-warnings --warnings-as-errors
      - run:
          command: mix credo
      - run:
          command: mix surface.format --check-formatted
      - run:
          command: mix test
  docker_image:
    docker:
      - image: heathmont/elixir-ci:1.14.0-otp-25-alpine
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ./
      - restore_cache:
          keys:
            - v7-build-{{ checksum "mix.lock" }}-{{ .Revision }}
            - v7-build-{{ checksum "mix.lock" }}-
            - v7-build-
      - run:
          name: Docker login
          command: echo -e "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
      - run: scripts/deploy/docker-build-ci push $CIRCLE_TAG
  deploy:
    docker:
      - image: heathmont/elixir-ci:1.14.0-otp-25-alpine
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ./
      - run:
          name: Docker login
          command: echo -e "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
      - run:
          name: Setup robot SSH key
          command: |
            echo "$ROBOT_SSH_KEY" | base64 -d > $HOME/.ssh/id_rsa.robot && chmod 600 $HOME/.ssh/id_rsa.robot && ssh-add $HOME/.ssh/id_rsa.robot
            echo -e "Host *\n IdentityFile $HOME/.ssh/id_rsa.robot\n IdentitiesOnly yes" > $HOME/.ssh/config
      - run:
          name: Setup deploy tool auth
          command: echo "{\"user\":\"$DEPLOY_USER\", \"pass\":\"$DEPLOY_PASS\"}" > $HOME/.deploy_auth
      - run:
          name: Deploy
          command: scripts/deploy/stacks-deploy $CIRCLE_TAG
  release:
    docker:
      - image: heathmont/elixir-ci:1.14.0-otp-25-alpine
    environment:
      MIX_ENV: test
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-test-{{ checksum "mix.lock" }}-{{ .Revision }}
            - v1-test-{{ checksum "mix.lock" }}-
            - v1-test-
      - run:
          name:       Hex auth
          command:    mix hex.organization auth coingaming --key $HEX_API_KEY
      - run:
          name:       Fetch dependencies
          command:    mix deps.get
      - run:
          name:       Compile dependencies
          command:    mix deps.compile
      - run:
          name:       Compile protocols
          command:    mix compile --warnings-as-errors
      - run:
          name:       Test
          command:    mix test
      - save_cache:
          key: v1-test-{{ checksum "mix.lock" }}-{{ .Revision }}
          paths:
            - deps
            - ~/.mix
      - run:
          name:       Semantic Release
          command:    npx semantic-release --extends @heathmont/semantic-release-elixir-hex
  

workflows:
  version: 2
  workflow:
    jobs:
      - otp_release:
          context: global
      - check_code_quality:
          context: global
      - release:
          context: global
      - docker_image:
          context: global
          filters:
            branches:
              only:
                - main
          requires:
            - otp_release
      - deploy:
          context: global
          filters:
            branches:
              only: 
                - main
            tags:
              only: /^v.*/
          requires:
            - docker_image
  